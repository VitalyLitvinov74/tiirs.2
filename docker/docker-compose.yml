version: "3.2"
services:
  traefik:
    image: traefik:latest
    container_name: traefik-tiirs2
    restart: unless-stopped
    command:
#      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
      - 8088:8080
    expose: 
      - "8080"
    volumes:
      - ./traefik/letsencrypt:/letsencrypt
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
    networks: 
      - frontend

  php:
    build: 
      context: ./php/ 
      args:
            PHP_EXEC_TIME: ${PHP_EXEC_TIME}
            PHP_MEM_LIMIT: ${PHP_MEM_LIMIT}
            PHP_ERR_REPORT: ${PHP_ERR_REPORT}
            UPLOAD_MAX_FILESIZE: ${UPLOAD_MAX_FILESIZE}
    container_name: php-tiirs2
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - mysql
#    command: bash -c  "${DEPLOY_SCRIPT}"
    volumes:
      - ../:/var/www/html/

  php-cli:
    build:
      context: ./php-cli/
      args:
            PHP_EXEC_TIME: ${PHP_EXEC_TIME}
            PHP_MEM_LIMIT: ${PHP_MEM_LIMIT}
            PHP_ERR_REPORT: ${PHP_ERR_REPORT}
            UPLOAD_MAX_FILESIZE: ${UPLOAD_MAX_FILESIZE}
    container_name: php-cli-tiirs2
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - mysql
      - php
    command: bash -c  "${DEPLOY_SCRIPT}"
#    command: bash -c  "
#       composer install && composer update
#       && npm i && npm update
#       && sleep 10 && ./yii migrate --interactive=0
#       "
    volumes:
      - ../:/var/www/html/

  apache:
    container_name: apache-tiirs2
    build: 
      context: ./apache/
      args:
           HOSTNAME1: ${HOSTNAME1}
           HOMEDIR1: ${HOMEDIR1}
    env_file:
      - .env
    depends_on:
      - mysql
    networks:
      - frontend
      - backend
    ports:
      - "${APACHE_PORT}:80"
    volumes:
      - ../:/var/www/html/
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.docker.network=frontend
      - 'traefik.enable=true'
      - 'traefik.http.routers.apache.service=apache'
      - 'traefik.http.routers.apache.entrypoints=http'
      - 'traefik.http.routers.apache.rule=Host(`${HOSTNAME1}`)'
      - 'traefik.http.middlewares.apache-https-redirect.redirectscheme.scheme=https'
      - 'traefik.http.routers.apache.middlewares=apache-https-redirect'
      - 'traefik.http.routers.apache-secure.entrypoints=https'
      - 'traefik.http.routers.apache-secure.rule=Host(`${HOSTNAME1}`)'
      - 'traefik.http.routers.apache-secure.tls=true'
      - 'traefik.http.routers.apache-secure.tls.certresolver=http'
      - 'traefik.http.routers.apache-secure.service=apache'
      - 'traefik.http.services.apache.loadbalancer.server.port=80'



      - 'traefik.http.routers.apache2.service=apache2'
      - 'traefik.http.routers.apache2.entrypoints=http'
      - 'traefik.http.middlewares.apache2-https-redirect.redirectscheme.scheme=https'
      - 'traefik.http.routers.apache2.middlewares=apache2-https-redirect'
      - 'traefik.http.routers.apache2-secure.entrypoints=https'
      - 'traefik.http.routers.apache2-secure.tls=true'
      - 'traefik.http.routers.apache2-secure.tls.certresolver=http'
      - 'traefik.http.routers.apache2-secure.service=apache2'
      - 'traefik.http.services.apache2.loadbalancer.server.port=80'



  mysql:
    image: mysql:5.7
    container_name: mysql-tiirs2
    networks:
      - backend
    env_file:
      - .env
    ports:
      - "${MYSQL_PORT}:3306"
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  adminer:
    container_name: adminer-tiirs2
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT}:8080"
    networks:
      - frontend
      - backend
    env_file:
      - .env
    environment:
      ADMINER_DEFAULT_SERVER: mysql
networks:
  frontend:
    external: true
  backend:
    driver: bridge
